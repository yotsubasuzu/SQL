USE QLBH
GO 
SELECT * FROM CTHD
SELECT * FROM KHACHHANG
SELECT * FROM HOADON
SELECT * FROM NHANVIEN
SELECT * FROM SANPHAM

---- II. PIVOT TABLE ----
---- VÍ DỤ 1: CÓ THỂ ĐƯA RA KẾT QUẢ GIỐNG GROUP BY
SELECT SOHD, SUM(SL) AS SLSP FROM CTHD
WHERE SOHD IN (1001, 1002)
GROUP BY SOHD

--- BẢNG OUTPUT: [1001], [1002]
SELECT * 
INTO #BANGTAM
FROM CTHD
WHERE SOHD IN (1001, 1002)

SELECT [1001], [1002]  --- 1. XÁC ĐỊNH CÁC CỘT OUTPUT
FROM (SELECT SOHD, SL FROM #BANGTAM) A --- 2. XÁC ĐỊNH DỮ LIỆU NGUỒN THỰC HIỆN PIVOT
PIVOT
(
	SUM(SL) --- 3. XÁC ĐỊNH HÀM TÍNH TOÁN
	FOR SOHD IN ([1001], [1002]) --- 4. XÁC ĐỊNH CỘT CHỨA GIÁ TRỊ LÀ TÊN CỘT OUTPUT
) A

---- VÍ DỤ: SỬ DỤNG PIVOT TẠO BẢNG OUTPUT [MAKH], [NV01], [NV02], [NV03]
SELECT * FROM HOADON
----

WITH DAT AS (
SELECT [MAKH], ISNULL([NV01], 0) AS NV01, ISNULL([NV02], 0) AS NV02, ISNULL([NV03], 0) AS NV03 --- 1.
FROM
(SELECT MAKH, MANV, TRIGIA FROM HOADON) A --- 2.
PIVOT 
(
	SUM(TRIGIA) --- 3.
	FOR MANV IN ([NV01], [NV02], [NV03]) --- 4.
) A
--WHERE MAKH = 'KH01'
)

SELECT * FROM DAT
ORDER BY MAKH


SELECT MAKH,"NV01","NV02","NV03"
FROM
(SELECT MAKH,MANV,TRIGIA FROM #TMP) AS PIVOTDATA
PIVOT
(SUM(TRIGIA) FOR MANV IN ("NV01","NV02","NV03")
) AS PIVOTTABLE
GO

---- CÁCH 2:
SELECT MAKH
, SUM(CASE WHEN MANV = 'NV01' THEN TRIGIA ELSE 0 END) AS NV01
, SUM(CASE WHEN MANV = 'NV02' THEN TRIGIA ELSE 0 END) AS NV02 
, SUM(CASE WHEN MANV = 'NV03' THEN TRIGIA ELSE 0 END) AS NV03
INTO #BANG1
FROM HOADON
GROUP BY MAKH
ORDER BY MAKH

--- VÍ DỤ: SỬ DỤNG CASE WHEN TẠO BẢNG OUTPUT [1001], [1002]
SELECT SOHD, SL FROM CTHD
---

SELECT 
 SUM(CASE WHEN SOHD = '1001' THEN SL ELSE 0 END) AS [1001]
, SUM(CASE WHEN SOHD = '1002' THEN SL ELSE 0 END) AS [1002]
FROM CTHD

---

SELECT 
SUM(CASE WHEN SOHD = 1001 THEN SL ELSE 0 END) AS '1001'
, SUM(CASE WHEN SOHD = 1002 THEN SL ELSE 0 END) AS '1002' 
FROM CTHD


SELECT SOHD, SL INTO #TMP FROM CTHD WHERE SOHD IN(1001,1002)

SELECT SUM(CASE WHEN SOHD = '1001' THEN SL ELSE 0 END) AS "SLHD 1001",
SUM(CASE WHEN SOHD = '1002' THEN SL ELSE 0 END) AS "SLHD 1002"
FROM #TMP


---- VÍ DỤ 2: WITH DAT AS (), SỬA ĐỔI TÊN CỘT HIỂN THỊ


---- VÍ DỤ 3: TÍNH SỐ LƯỢNG MASP SẢN XUẤT TỪ SINGAPORE, THAILAN, TRUNGQUOC, USA, VIETNAM THEO MỖI LOẠI CẶP TENSP, DVT


---- III. UNPIVOT ----
SELECT * FROM #BANG1

SELECT [MAKH], ISNULL([NV01], 0) AS NV01, ISNULL([NV02], 0) AS NV02, ISNULL([NV03], 0) AS NV03 --- 1.
FROM
(SELECT MAKH, MANV, TRIGIA FROM HOADON) A --- 2.
PIVOT 
(
	SUM(TRIGIA) --- 3.
	FOR MANV IN ([NV01], [NV02], [NV03]) --- 4.
) A

---- VÍ DỤ 1: UNPIVOT VÍ DỤ 2 MỤC II
SELECT MAKH, MANV, TRIGIA --- 1. XÁC ĐỊNH CỘT OUTPUT HIỂN THỊ
FROM (SELECT MAKH, NV01, NV02 FROM #BANG1) A --- 2. XÁC ĐỊNH DỮ LIỆU NGUỒN
UNPIVOT
(
	TRIGIA
	FOR MANV IN ([NV01], [NV02])
) A


---- VÍ DỤ 2: UNPIVOT VÍ DỤ 1 MỤC II
WITH DAT AS (
SELECT 
 SUM(CASE WHEN SOHD = '1001' THEN SL ELSE 0 END) AS [1001]
, SUM(CASE WHEN SOHD = '1002' THEN SL ELSE 0 END) AS [1002]
FROM CTHD
)

SELECT SOHD, SLSP --- 1.
FROM (SELECT [1001], [1002] FROM DAT) A
UNPIVOT
(
	SLSP --- 3.
	FOR SOHD IN ([1001],[1002]) --- 4.
) AS UNPV

USE MASTER

CREATE TABLE MASTER..JOB_LOG
(THONG_BAO NVARCHAR(MAX), THOI_GIAN DATETIME)

INSERT INTO MASTER.JOB_LOG(THONG_BAO, THOI_GIAN)
VALUES(N'JOB SQL30 ĐÃ ĐƯỢC CHẠY', GETDATE())

SELECT * FROM TEST..JOB_LOG


---- BUỔI 1: STORED PROCEDURE
CREATE PROCEDURE [PROC_NAME] ([VARIABLE NAME] [VARIABLE TYPE])
AS
BEGIN
	[PROCEDURE DEFINITION] ---- ALL COMMANDS IN SQL SERVER
END

---- BUỔI 2: 
---- FUNCTION -> SCALAR VALUE FUNCTION, TABLE VALUE FUNCTION
---- 1. SCALAR
CREATE FUNCTION [FUNC_NAME] ([VARIABLE NAME] [VARIABLE TYPE])
RETURNS [OUTPUT TYPE]
AS
BEGIN
	
	RETURN
END

--- 2. TABLE-VALUED FUNCTION 
CREATE FUNCTION [FUNC_NAME] ([VARIABLE NAME] [VARIABLE TYPE])
RETURNS TABLE
AS
RETURN
(
	[QUERY]
)

CREATE FUNCTION [FUNC_NAME] ([VARIABLE NAME] [VARIABLE TYPE])
RETURNS @BIEN_KIEU_BANG TABLE
(
	[COLUMN_NAME] [COLUMN TYPE]
)
AS
BEGIN
	
	INSERT INTO @BIEN_KIEU_BANG([COLUMN_NAME] [COLUMN TYPE])
	
	RETURN
END

---- VÒNG LẶP
---- WHILE [CONDITION] --- ĐIỀU KIỆN DỪNG VÒNG LẶP
---- 1. BIẾN CON TRỎ CURSOR
---- 2. ĐÁNH STT CHO TỪNG GIÁ TRỊ TRONG DANH SÁCH LẶP

---- INDEX ---- GÁN CHO CỘT -> TĂNG TỐC ĐỘ CÂU QUERY SELECT
---- TRANSACTION ---- TẠO MÔI TRƯỜNG TEST ĐỂ TEST THAY ĐỔI DỮ LIỆU

---- TRIGGER --- ACTION A (UPDATEDELETE/INSERT) -> KÍCH HOẠT TRIGGER -> TRIGGER THỰC HIỆN ACTION B
			---- BẢNG INSERTED, DELETED
			---- KẾT HỢP VÒNG LẶP KHI TÁC ĐỘNG LÊN NHIỀU DÒNG DỮ LIỆU
			---- TEST LOGIC TRIGGER -> SỬ DỤNG TRANSACTION

---- DYNAMIC SQL(SQL ĐỘNG) ---- TÍNH CHẤT: CÂU LỆNH SQL SERVER ĐẶT TRONG DẤU ''
						----ƯU ĐIỂM: GIẢI QUYẾT CÁC BÀI TOÁN THỰC HIỆN VÒNG LOOP CHO TÊN BẢNG HOẶC TÊN CỘT
---- PIVOT TABLE/UNPIVOT: XOAY CHIỀU DỮ LIỆU (DỌC <-> NGANG)
---- ĐẶT LỊCH TỰ ĐỘNG VÀ CẤU HÌNH MAIL